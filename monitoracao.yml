version: '3.4'
volumes:
  prometheus: {}
  grafana: {}
services:
  kafka_exporter:
    image: danielqsj/kafka-exporter
    networks:
      - stress_kafka-net
    command: --kafka.server=stress_broker.1.oniolxy2xix11a3qkwk7v8uli:9092 --kafka.server=stress_broker.3.qx67p16gotcs7ovgqa1gwepah:9092 --kafka.server=stress_broker.2.fjgxjhxqjev1zl26jg4ac3w2x:9092
    deploy:
      mode: replicated
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M      
      replicas: 1
      endpoint_mode: vip
  prometheus:
    image: prom/prometheus
    ports:
      - "9091:9090"
    networks:
      - stress_kafka-net
    volumes:
      - prometheus:/prometheus
    secrets:
      - prometheus.yml
    command: --config.file=/run/secrets/prometheus.yml --storage.tsdb.path=/prometheus --storage.tsdb.retention=168h
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4096M
        reservations:
          memory: 1024M
      replicas: 1
      endpoint_mode: vip
      # placement:
      #   constraints:
      #     - "node.labels.prometheus == true"
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - stress_kafka-net
    volumes:
      - grafana:/var/lib/grafana
    deploy:
      mode: replicated
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
      replicas: 1
      endpoint_mode: vip
      # placement:
      #   constraints:
      #     - "node.labels.grafana == true"
secrets:
  prometheus.yml:
    file: config/prometheus.yml
  # alertmanager.yml:
  #   file: config/alertmanager.yml
networks:
  stress_kafka-net:
    external: true